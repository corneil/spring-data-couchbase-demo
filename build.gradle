buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.2'
    id 'com.github.jruby-gradle.base' version '0.1.17'
}

group = 'com.tsctech.springdata.demo'
description = 'Spring Data Demo'

apply from: new File(rootProject.projectDir, 'dependencies.gradle')

defaultTasks 'build'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    version = '1.0.BUILD-SNAPSHOT'
    apply from: new File(rootProject.projectDir, 'dependencies.gradle')

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    eclipse {
        classpath {
            downloadSources = true
        }
    }
    idea {
        module {
            downloadSources = true
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}


apply plugin: 'org.asciidoctor.convert'

dependencies {
    gems 'rubygems:asciidoctor-diagram:1.3.0'
}

def graphvizDotLoc() {
    def result = System.getProperty('os.name').toLowerCase().contains('win') ? 'dot.exe' : 'dot'
    if (rootProject.hasProperty('graphvizdot')) {
        result = rootProject.getProperty('graphvizdot')
    } else {
        def graphVizDotEnv = System.getenv('GRAPHVIZ_DOT')
        if (graphVizDotEnv) {
            result = graphVizDotEnv
        }
    }
    return result
}

asciidoctor {
    dependsOn jrubyPrepareGems
    requires = ['asciidoctor-diagram', 'asciidoctor-diagram/plantuml']
    gemPath = jrubyPrepareGems.outputDir

    attributes 'build-gradle': file('build.gradle'),
            'source-highlighter': 'coderay',
            'imagesdir': 'images',
            'toc': 'left',
            'icons': 'font',
            'setanchors': 'true',
            'idprefix': '',
            'idseparator': '-',
            'docinfo1': 'true',
            'graphvizdot': graphvizDotLoc()
}

build.dependsOn asciidoctor