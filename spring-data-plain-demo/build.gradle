apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'


description = 'Spring Data Plain Demo'

sourceSets {
    main {
        // Fixes problem with JPA EntityManager factory requiring classes and persistence.xml in same path
        output.resourcesDir = output.classesDir
    }
}

configurations {
    springAgent
}

dependencies {

    compile 'org.projectlombok:lombok'
    compile 'org.springframework.data:spring-data-commons'
    compile 'org.springframework.data:spring-data-jpa'
    compile 'org.springframework.data:spring-data-mongodb'
    compile 'org.springframework.data:spring-data-couchbase'

    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-aop'
    compile 'org.springframework:spring-aspects'
    compile 'org.springframework:spring-jdbc'
    compile 'org.springframework:spring-orm'
    compile(group: 'org.springframework', name: 'spring-core') {
        exclude(module: 'commons-logging')
    }

    compile 'org.mongodb:mongo-java-driver'

    compile 'org.hibernate:hibernate-core'
    compile 'org.hibernate:hibernate-entitymanager'
    compile(group: 'org.hibernate', name: 'hibernate-validator') {
        exclude(module: 'jaxb-api')
        exclude(module: 'jaxb-impl')
    }

    compile 'javax.validation:validation-api'
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.core:jackson-annotations'


    compile 'ch.qos.logback:logback-classic'


    compile 'org.aspectj:aspectjrt'
    compile 'org.aspectj:aspectjweaver'

    compile 'org.apache.commons:commons-lang3'
    compile 'commons-collections:commons-collections'
    compile 'javax.transaction:jta:1.1'
    compile 'commons-pool:commons-pool'
    compile(group: 'commons-dbcp', name: 'commons-dbcp') {
        exclude(module: 'commons-logging')
        exclude(module: 'xml-apis')
    }

    testCompile 'junit:junit'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.hamcrest:hamcrest-all'


    testCompile 'com.h2database:h2'
    testCompile 'mysql:mysql-connector-java'

    compile 'com.github.fakemongo:fongo'

    testCompile 'javax.el:javax.el-api'

    springAgent 'org.springframework:spring-instrument'

}

task cleanTestJpa(type: Delete) {
    delete 'test-sd.h2.db'
    delete 'test-sd.trace.db'
}

cleanTest.dependsOn cleanTestJpa


test {
    jvmArgs = ['-javaagent:' + configurations.springAgent.singleFile.toString()]
    systemProperty 'spring.profiles.active', 'jpa-hibernate'
    if (logger.isInfoEnabled()) {
        testLogging.showStandardStreams = true
    }
}

task testMongo(type: Test, dependsOn: [classes, testClasses]) {
    jvmArgs = ['-javaagent:' + configurations.springAgent.singleFile.toString()]
    systemProperty 'spring.profiles.active', 'mongo'
    if (logger.isInfoEnabled()) {
        testLogging.showStandardStreams = true
    }
}


task testCouchbase(type: Test, dependsOn: [classes, testClasses]) {
    jvmArgs = ['-javaagent:' + configurations.springAgent.singleFile.toString()]
    systemProperty 'spring.profiles.active', 'couchbase'
    if (logger.isInfoEnabled()) {
        testLogging.showStandardStreams = true
    }
}

check.dependsOn testMongo

// check.dependsOn testCouchbase

